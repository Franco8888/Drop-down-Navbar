@inject NavigationManager navigationManager

<style>
    .nav-button-active-background {
        background-color: #38aecc;
    }

        .nav-button-active-background:hover {
            background-color: #43c4e6;
        }

    .nav-button-background {
        background-color: #022F40;
    }

        .nav-button-background:hover {
            background-color: #044259;
        }
</style>

<header>
    <nav>
        <div>
            @foreach (var navButton in MainNavButtons)
            {
                <div class="dropdown">
                    <button class="@navButton.StyleClassString" @onclick="@(() => OnButtonClicked(navButton, navButton.ButtonRoute))">@navButton.ButtonString</button>
                    <div class="dropdown-content">
                        @foreach (var button in navButton.SubSection)
                        {
                            <button class="@button.StyleClassString" @onclick="@(() => OnButtonClicked(navButton, button.ButtonRoute, button.ButtonString))">@button.ButtonString</button>
                        }
                    </div>
                </div>
            }

        </div>

        <div>testing:</div>
        <div style="font-size: 19px;">MainButtons</div>
        <div>mainButtonPressed section: @in1</div>
        <div>mainbuttonPressed buttonString: @in2</div>
        <div>Route from main button: @in3</div>
        <div>buttonString: @in4</div>
        @*<div>dash: @MainNavButtons[0].StyleClassString</div>
        <div>acc: @MainNavButtons[1].StyleClassString</div>
        <div>GP: @MainNavButtons[2].StyleClassString</div>
        <div>tests: @MainNavButtons[3].StyleClassString</div>
        <div>shop: @MainNavButtons[4].StyleClassString</div>
        <div>support: @MainNavButtons[5].StyleClassString</div>*@
    </nav>
</header>

@code {

    List<NavButton> MainNavButtons = new()
    {
        new NavButton("Dashboard", "/dashboard", NavSection.Dashboard, NavDashboardSection),
        new NavButton("Account", "/account", NavSection.Account, NavAccountSection),
        new NavButton("Gamer Profile", "/gamerprofile", NavSection.GameProfile, NavGamerProfileSection),
        new NavButton("Tests", "/tests", NavSection.Tests, NavTestSection),
        new NavButton("Shop", "/shop", NavSection.Shop, NavShopSection),
        new NavButton("Support", "/support/ticekts", NavSection.Support, NavSupportSection),
    };

    static List<NavButton> NavDashboardSection = new();

    static List<NavButton> NavAccountSection = new()
    {
        new NavButton("Personel Detials", "/account/detials"),
        new NavButton("Achievements", "/account/achievements"),
        new NavButton("Activity", "/account/activity"),
        new NavButton("Referrals", "/account/referrals"),
    };

    static List<NavButton> NavGamerProfileSection = new()
    {
        new NavButton("My Game Profile", "/profile"),
        new NavButton("My Game Genres", "/profile/genres"),
        new NavButton("My Game Devices", "/profile/devices"),
    };

    static List<NavButton> NavTestSection = new()
    {
        new NavButton("Available Tests", "/tests"),
        new NavButton("Test History", "/tests/history"),
    };
    static List<NavButton> NavShopSection = new()
    {
        new NavButton("Browse", "/shop"),
        new NavButton("Address Book", "/shop/addressbook"),
        new NavButton("Order History", "/shop/orderhistory"),
    };
    static List<NavButton> NavSupportSection = new()
    {
        new NavButton("Tickets", "/support/tickets"),
        new NavButton("Legal", "/support/legal"),
        new NavButton("FAQ", "/support/faq"),
    };

    string in1 = "";
    string in2 = "";
    string in3 = "";
    string in4 = "";

    private void OnButtonClicked(NavButton mainButtonPressed, string route, string buttonString = "")
    {
        // if main button was pressed
        in1 = mainButtonPressed.Section.ToString();
        in2 = mainButtonPressed.ButtonString;
        in3 = route;
        in4 = buttonString;
        if(buttonString == "")
        {
            foreach (var mainbtn in MainNavButtons)
            {
                if (mainbtn.Section == mainButtonPressed.Section)
                {
                    mainbtn.StyleClassString = ButtonActiveStyle.active;
                }
                else
                {
                    mainbtn.StyleClassString = ButtonActiveStyle.normal;
                }

                //cleanup
                foreach (var subButton in mainbtn.SubSection)
                {
                    subButton.StyleClassString = ButtonActiveStyle.normal;
                }
            }

            if(mainButtonPressed.SubSection.Count > 0)
            {
                mainButtonPressed.SubSection[0].StyleClassString = ButtonActiveStyle.active;
            }

        }
        else
        {
            foreach (var mainbtn in MainNavButtons)
            {
                if (mainbtn.Section == mainButtonPressed.Section)
                {
                    mainbtn.StyleClassString = ButtonActiveStyle.active;
                }
                else
                {
                    mainbtn.StyleClassString = ButtonActiveStyle.normal;
                }


                foreach (var subButton in mainbtn.SubSection)
                {
                    if (subButton.ButtonString == buttonString)
                    {
                        subButton.StyleClassString = ButtonActiveStyle.active;
                    }
                    else
                    {
                        subButton.StyleClassString = ButtonActiveStyle.normal;
                    }
                }

            }



        }

        GoToPage(route);

    }

    private void GoToPage(string route)
    {
        navigationManager.NavigateTo(route);
    }

    public class NavButton
    {
        public NavButton(string buttonString, string buttonRoute, NavSection section = NavSection.Dashboard, List<NavButton> subSection = null)
        {
            ButtonString = buttonString;
            ButtonRoute = buttonRoute;
            Section = section;
            SubSection = subSection;
        }

        public string ButtonString { get; set; }

        public string ButtonRoute { get; set; }

        public NavSection Section { get; set; } = NavSection.Dashboard;

        public List<NavButton> SubSection { get; set; } = new List<NavButton>();

        public string StyleClassString { get; set; } = ButtonActiveStyle.normal;

    }

@*    public class SubNavButton
    {
        public SubNavButton(string buttonString, string buttonRoute, string styleClassString)
        {
            ButtonString = buttonString;
            ButtonRoute = buttonRoute;
            StyleClassString = styleClassString;
        }

        public string ButtonString { get; set; }

        public string ButtonRoute { get; set; }

        public string StyleClassString { get; set; } = ButtonActiveStyle.normal;
    }*@

    public enum NavSection
    {
        None,
        Dashboard,
        Account,
        GameProfile,
        Tests,
        Shop,
        Support
    }

    public class ButtonActiveStyle
    {
        public static readonly string active = "nav-button-active-background";
        public static readonly string normal = "nav-button-background";
    }
}
